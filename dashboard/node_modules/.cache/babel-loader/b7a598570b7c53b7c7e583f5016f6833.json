{"ast":null,"code":"import React, { useContext } from \"react\";\nimport AuthProvider, { firebaseAuth } from \"./authProvider\";\nimport { withRouter } from \"react-router-dom\"; // const Signup = (props) => {\n//   const { handleSignup, inputs, setInputs, errors } = useContext(firebaseAuth);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"handleSubmit\");\n//     //wait to signup\n//     await handleSignup();\n//     //push home\n//     props.history.push(\"/\");\n//   };\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     console.log(inputs);\n//     setInputs((prev) => ({ ...prev, [name]: value }));\n//   };\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       Signup\n//       {/* make inputs  */}\n//       <input\n//         onChange={handleChange}\n//         name=\"email\"\n//         placeholder=\"email\"\n//         value={inputs.email}\n//       />\n//       <input\n//         onChange={handleChange}\n//         name=\"password\"\n//         placeholder=\"password\"\n//         value={inputs.password}\n//       />\n//       <button>signup</button>\n//       {errors.length > 0\n//         ? errors.map((error) => <p style={{ color: \"red\" }}>{error}</p>)\n//         : null}\n//     </form>\n//   );\n// };\n\nconst Signup = e => {\n  e.preventDefault();\n  AuthProvider.createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value).then(user => {\n    console.log(user);\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\n_c = Signup;\nexport default _c2 = withRouter(Signup);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Signup\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/deepugupta/Desktop/PersonalWebsite/src/components/Signup.js"],"names":["React","useContext","AuthProvider","firebaseAuth","withRouter","Signup","e","preventDefault","createUserWithEmailAndPassword","emailRef","current","value","passwordRef","then","user","console","log","catch","err"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,IAAuBC,YAAvB,QAA2C,gBAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAIC,CAAD,IAAO;AACpBA,EAAAA,CAAC,CAACC,cAAF;AACAL,EAAAA,YAAY,CAACM,8BAAb,CACEC,QAAQ,CAACC,OAAT,CAAiBC,KADnB,EAEEC,WAAW,CAACF,OAAZ,CAAoBC,KAFtB,EAIGE,IAJH,CAISC,IAAD,IAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GANH,EAOGG,KAPH,CAOUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GATH;AAUD,CAZD;;KAAMb,M;AAcN,qBAAeD,UAAU,CAACC,MAAD,CAAzB","sourcesContent":["import React, { useContext } from \"react\";\nimport AuthProvider, { firebaseAuth } from \"./authProvider\";\nimport { withRouter } from \"react-router-dom\";\n\n// const Signup = (props) => {\n//   const { handleSignup, inputs, setInputs, errors } = useContext(firebaseAuth);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"handleSubmit\");\n//     //wait to signup\n//     await handleSignup();\n//     //push home\n//     props.history.push(\"/\");\n//   };\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     console.log(inputs);\n//     setInputs((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       Signup\n//       {/* make inputs  */}\n//       <input\n//         onChange={handleChange}\n//         name=\"email\"\n//         placeholder=\"email\"\n//         value={inputs.email}\n//       />\n//       <input\n//         onChange={handleChange}\n//         name=\"password\"\n//         placeholder=\"password\"\n//         value={inputs.password}\n//       />\n//       <button>signup</button>\n//       {errors.length > 0\n//         ? errors.map((error) => <p style={{ color: \"red\" }}>{error}</p>)\n//         : null}\n//     </form>\n//   );\n// };\nconst Signup = (e) => {\n  e.preventDefault();\n  AuthProvider.createUserWithEmailAndPassword(\n    emailRef.current.value,\n    passwordRef.current.value\n  )\n    .then((user) => {\n      console.log(user);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport default withRouter(Signup);\n"]},"metadata":{},"sourceType":"module"}