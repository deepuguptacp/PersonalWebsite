"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createBox;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _clsx = _interopRequireDefault(require("clsx"));

var _styledEngine = _interopRequireWildcard(require("@material-ui/styled-engine"));

var _styleFunctionSx = _interopRequireWildcard(require("./styleFunctionSx"));

var _jsxRuntime = require("react/jsx-runtime");

function isEmpty(obj) {
  return Object.keys(obj).length === 0;
}

const useTheme = defaultTheme => {
  const contextTheme = React.useContext(_styledEngine.ThemeContext);
  return isEmpty(contextTheme) ? defaultTheme : contextTheme;
};

function createBox(defaultTheme = {}) {
  const BoxRoot = (0, _styledEngine.default)('div')(_styleFunctionSx.default);
  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {
    const theme = useTheme(defaultTheme);

    const _extendSxProp = (0, _styleFunctionSx.extendSxProp)(inProps),
          {
      className,
      component = 'div'
    } = _extendSxProp,
          other = (0, _objectWithoutPropertiesLoose2.default)(_extendSxProp, ["className", "component"]);

    return /*#__PURE__*/(0, _jsxRuntime.jsx)(BoxRoot, (0, _extends2.default)({
      as: component,
      ref: ref,
      className: (0, _clsx.default)(className, 'MuiBox-root'),
      theme: theme
    }, other));
  });
  process.env.NODE_ENV !== "production" ? Box.propTypes
  /* remove-proptypes */
  = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------

    /**
     * @ignore
     */
    children: _propTypes.default.node,

    /**
     * The component used for the root node.
     * Either a string to use a HTML element or a component.
     */
    component: _propTypes.default.elementType,

    /**
     * @ignore
     */
    sx: _propTypes.default.object
  } : void 0;
  return Box;
}